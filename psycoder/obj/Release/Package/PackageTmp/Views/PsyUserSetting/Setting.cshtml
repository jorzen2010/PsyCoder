@model psycoderEntity.ZixunshiUser
@section Topcss {
    <link href="~/plugins/bootstrap-validator/css/bootstrapValidator.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/copper/css/cropper.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/copper/css/avatar.css" rel="stylesheet" type="text/css" />
}
<div class="content">

    <h3>
        个人信息设置 <small>联系方式会显示在您的的推广小程序中，让客户方便与您联系！</small>
        @*<span class="pull-right">
                <small style="font-size:12px">价值说明</small>
            </span>*@
    </h3>
    <div class="row">
        <div class="container col-md-12 Setting">
            <div class="col-md-12 avatar">
                <img src="@Model.PsyAvatar" class="img-circle img-bordered-sm im" id="PsyAvatarSrc">
                @*<img src="~/Resource/img/avatar.jpg" class="img-circle img-bordered-sm im" id="PsyAvatarSrc">*@
                <input type="hidden" name="PsyAvatar" id="PsyAvatar" value="/Resource/img/nophoto.png" />
                
                <h5><button class="btn btn-default btn-xs" id="avatarImgBtn" type="button">
   点击修改头像
</button></h5>
            </div>
            <form id="setting" name="setting">

                @Html.AntiForgeryToken()
               @Html.HiddenFor(model=>model.Id)
                <div class="xcxset">

                    <ul>
                        <li>
                            <div class="form-group">

                                @Html.LabelFor(model => model.PsyUserEmail, new { @class = "col-sm-2 Settinglable  no-margin" })

                                <div class="col-sm-9">

                            
                                    @Html.TextBoxFor(model => model.PsyUserEmail, new { @class = "SettingInput col-sm-10", @readOnly = "true" })
                                </div>
                                
                            </div>
                        </li>

                        <li>
                            <div class="form-group">

                                @Html.LabelFor(model => model.PsyNickName, new { @class = "col-sm-2 Settinglable  no-margin" })

                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.PsyNickName, new { @class = "SettingInput col-sm-10 ", @readOnly = "true" })

                                </div>
                                <div class="col-sm-1 editBtn" data-z="">修改</div>
                            </div>
                        </li>

                      

                        <li>
                            <div class="form-group">

                                @Html.LabelFor(model => model.PsyTelephone, new { @class = "col-sm-2 Settinglable  no-margin" })

                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.PsyTelephone, new { @class = "SettingInput col-sm-10 ", @readOnly = "true" })

                                </div>
                                <div class="col-sm-1 editBtn" data-z="">修改</div>
                            </div>
                        </li>

                        <li>
                            <div class="form-group">

                                @Html.LabelFor(model => model.PsyWechat, new { @class = "col-sm-2 Settinglable  no-margin" })

                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.PsyWechat, new { @class = "SettingInput col-sm-10 ", @readOnly = "true" })

                                </div>
                                <div class="col-sm-1 editBtn" data-z="">修改</div>
                            </div>
                        </li>

                        <li>
                            <div class="form-group">

                                @Html.LabelFor(model => model.PsyQQ, new { @class = "col-sm-2 Settinglable  no-margin" })

                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.PsyQQ, new { @class = "SettingInput col-sm-10 ", @readOnly = "true" })

                                </div>
                                <div class="col-sm-1 editBtn" data-z="">修改</div>
                            </div>
                        </li>

                        <li>
                            <div class="form-group">

                                @Html.LabelFor(model => model.PsyEmail, new { @class = "col-sm-2 Settinglable  no-margin" })

                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.PsyEmail, new { @class = "SettingInput col-sm-10 ", @readOnly = "true" })

                                </div>
                                <div class="col-sm-1 editBtn" data-z="">修改</div>
                            </div>
                        </li>









                    </ul>


                </div>

            </form>
        </div>
        <!-- /.col -->
    </div>
</div>


<div class="modal fade" id="avatar-modal" aria-hidden="true" aria-labelledby="avatar-modal-label" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">

                <div class="row">
                    <div class="col-md-12">
                        <div class="img-container" style="width:870px;height:500px;">

                            <img id="image" src="@Model.PsyAvatar" alt="Picture">
                            <input id="imageaspectRatio" type="hidden" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-sm-12">

                        <div class="docs-buttons text-center">
                            <div class="btn-group">
                                <button type="button" class="btn btn-primary" data-method="zoom" data-option="0.1" title="Zoom In">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="$().cropper(&quot;zoom&quot;, 0.1)">
                                        <span class="fa fa-search-plus"></span> 放大
                                    </span>
                                </button>
                                <button type="button" class="btn btn-primary" data-method="zoom" data-option="-0.1" title="Zoom Out">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="$().cropper(&quot;zoom&quot;, -0.1)">
                                        <span class="fa fa-search-minus"></span> 缩小
                                    </span>
                                </button>
                            </div>



                            <div class="btn-group">
                                <button type="button" class="btn btn-primary" data-method="rotate" data-option="-45" title="Rotate Left">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="$().cropper(&quot;rotate&quot;, -45)">
                                        <span class="fa fa-rotate-left"></span> 左旋转
                                    </span>
                                </button>
                                <button type="button" class="btn btn-primary" data-method="rotate" data-option="45" title="Rotate Right">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="$().cropper(&quot;rotate&quot;, 45)">
                                        <span class="fa fa-rotate-right"></span> 右旋转
                                    </span>
                                </button>
                            </div>

                            <div class="btn-group">
                                <button type="button" class="btn btn-primary" data-method="scaleX" data-option="-1" title="Flip Horizontal">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="$().cropper(&quot;scaleX&quot;, -1)">
                                        <span class="fa fa-arrows-h"></span> 水平翻转
                                    </span>
                                </button>
                                <button type="button" class="btn btn-primary" data-method="scaleY" data-option="-1" title="Flip Vertical">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="$().cropper(&quot;scaleY&quot;, -1)">
                                        <span class="fa fa-arrows-v"></span> 垂直翻转
                                    </span>
                                </button>
                                <button type="button" class="btn btn-primary" data-method="reset" title="Reset">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="$().cropper(&quot;reset&quot;)">
                                        <span class="fa fa-refresh"></span> 重置
                                    </span>
                                </button>
                            </div>
                            <div class="btn-group btn-group-crop">
                                <label class="btn btn-success btn-upload" for="inputImage" title="Upload image file">
                                    <input type="file" class="sr-only" id="inputImage" name="file" accept=".jpg,.jpeg,.png,.gif,.bmp,.tiff">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="点击上传图片">
                                        <span class="fa fa-upload"></span> 更换图片
                                    </span>
                                </label>
                                <button type="button" id="getCroppedCanvasbtn" class="btn btn-warning" data-method="getCroppedCanvas" data-option="{ &quot;width&quot;: 180, &quot;height&quot;: 180 }">
                                    <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="$().cropper(&quot;getCroppedCanvas&quot;)">
                                        裁剪并上传
                                    </span>
                                </button>

                            </div>
                            <button type="button" class="btn btn-default" data-dismiss="modal">
                                <span data-toggle="tooltip">
                                    取消关闭
                                </span>
                            </button>

                        </div>

                    </div>

                    <!-- /.docs-buttons -->


                </div>
            </div>

        </div>
    </div>
</div>
@section BottomScripts {
<script type="text/javascript" src="~/plugins/bootbox.min.js"></script>
<script type="text/javascript" src="~/plugins/bootstrap-validator/js/bootstrapValidator.js"></script>
<script type="text/javascript" src="~/plugins/copper/js/cropper.js"></script>
<script type="text/javascript" src="~/plugins/copper/js/avatar.js"></script>
<script type="text/javascript" src="~/Resource/js/SkyfileCopper.js"></script>
    <script type="text/javascript">

        $('#imageaspectRatio').val('1');
        $('#avatarImgBtn').click(function () {
            $('#avatar-modal').modal('show');
            //这句的意思是将container的宽高值去掉，保证自适应效果。有个小bug是第一次使用的时候如果浏览器过小可能造成显示不完全。
            $(".img-container").removeAttr("style");
            $('#getCroppedCanvasbtn').attr('data-skyac', "avatar");
        });






        $(document).ready(function () {


            //register的表单验证

            $('#setting').bootstrapValidator({
                live: 'enabled',
                // submitButtons: '#btn-test',
                message: 'This value is not valid',
                //这部分是反馈的样式icon，每次反馈
                //feedbackIcons: {
                //    valid: 'glyphicon glyphicon-ok',
                //    invalid: 'glyphicon glyphicon-remove',
                //    validating: 'glyphicon glyphicon-refresh'
                //},
                fields: {
                    PsyUserEmail: {
                        validators: {
                            notEmpty: {
                                message: '用户邮箱不能为空'
                            },
                            emailAddress: { 
                                message: '请输入正确的邮箱'
                            }
                        }
                    },
                    PsyNickName: {
                        validators: {
                            notEmpty: {
                                message: '个人昵称不能为空'
                            },
                        }
                    },
                    PsyQQ: {
                        validators: {
                            notEmpty: {
                                message: 'QQ不能为空'
                            },
                        }
                    },
                    PsyTelephone: {
                        validators: {
                            notEmpty: {
                                message: '手机号不能为空'
                            },
                            stringLength: {
                                min: 11,
                                max: 11,
                                message: '手机号长度为11位'
                            },
                            regexp: {
                                regexp: /^1\d{10}$/,
                                message: '手机号格式不对。'
                            },
                        }
                    },
                    PsyWechat: {
                        validators: {
                            notEmpty: {
                                message: '微信不能为空'
                            },
                        }
                    },
                    PsyEmail: {
                        validators: {
                            notEmpty: {
                                message: '联系邮箱不能为空'
                            },
                            emailAddress: {
                                message: '请输入正确的邮箱'
                            }
                        }
                    },
                  

                }
            });

            $('#shenfenrenzheng').bootstrapValidator({
                live: 'enabled',
                // submitButtons: '#btn-test',
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    PsyRealName: {
                        validators: {
                            notEmpty: {
                                message: '真实姓名不能为空'
                            },
                        }
                    },
                    PsyNumber: {
                        validators: {
                            notEmpty: {
                                message: '身份证号不能为空'
                            },
                        }
                    },
                    PsyZhengshuNumber: {
                        validators: {
                            notEmpty: {
                                message: '咨询师证书编号不能为空'
                            },
                        }
                    },


                }
            });

            $('#lianxifangshi').bootstrapValidator({
                live: 'enabled',
                //  submitButtons: '#btn-test',
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    Email: {
                        validators: {
                            notEmpty: {
                                message: '邮箱不能为空'
                            },
                        }
                    },
                    QQ: {
                        validators: {
                            notEmpty: {
                                message: 'QQ不能为空'
                            },
                        }
                    },
                    Wechat: {
                        validators: {
                            notEmpty: {
                                message: '微信号不能为空'
                            }
                        }
                    },
                    Telephone: {
                        validators: {
                            notEmpty: {
                                message: '手机号不能为空'
                            },
                            stringLength: {
                                min: 11,
                                max: 11,
                                message: '手机号长度为11位'
                            },
                            regexp: {
                                regexp: /^1\d{10}$/,
                                message: '手机号格式不对。'
                            },
                        }
                    },

                }
            });
            $('#pinpai').bootstrapValidator({
                live: 'enabled',
                //  submitButtons: '#btn-test',
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    PsyTitle: {
                        validators: {
                            notEmpty: {
                                message: '品牌名称不能为空'
                            },
                        }
                    },
                    PsyInfo: {
                        validators: {
                            notEmpty: {
                                message: '一句话介绍不能为空'
                            },
                        }
                    },

                }
            });


        });

        $(".editBtn").on("click", function () {
            $(this).parent().parent().find("input").addClass("bg-setcolor").removeAttr("readOnly").focus();
            var optinput = $(this).parent().parent().find("input");
            var optval = optinput.val();
            // alert();
            optinput.val("");
            optinput.val(optval);
            var x = $(this).parent().parent().find("input").attr("name");
            $(this).html("<button class='btn btn-sm btn-info' onclick='editOk(this)' data-z='"+x+"'>确认修改</button>");
        });



        function editOk(opt) {
            $("#setting").bootstrapValidator('validate');//提交验证  
            if ($("#setting").data('bootstrapValidator').isValid()) {

               // alert("验证成功");
                var psyId = $("[name='Id']").val();
                var opt_name = $(opt).attr("data-z");
                var opt_val = $("[name=" + opt_name + "]").val();
                var token = $('[name=__RequestVerificationToken]').val();
                $.ajax({
                    type: 'POST',
                    url: "/PsyUserSetting/UpdateOpt",
                    data: {
                        Id: psyId,
                        optName: opt_name,
                        optVal: opt_val,
                        __RequestVerificationToken: token,
                    },
                    dataType: "json",
                    success: function (data) {
                        if (data.MessageStatus) {
                            //  alert(data.MessageInfo);
                            //alert("更新成功！");
                            location.reload();
                        }
                        else { alert("更新失败！"); }

                    },
                    error: function () {
                        alert("远程更新失败");
                    }
                });
            }
            else {
                alert("验证失败");
            }

           
        }
    </script>

}