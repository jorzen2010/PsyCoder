@model psycoderEntity.ZixunshiUser
@section Topcss {
    <link href="~/plugins/bootstrap-validator/css/bootstrapValidator.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/copper/css/cropper.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/copper/css/avatar.css" rel="stylesheet" type="text/css" />
}
<div class="content">

    <h3 class="pageTitle">
        小程序设置 <small>此内容将公开显示在您的推广小程序中，让来访者找到你，了解你！</small>
    </h3>
    <div class="box">
        <div class="box-header">
            <h3 class="box-title">
                小程序设置
            </h3>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-md-12">
                    <form id="xcxsetting" name="xcxsetting">

                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)

                        <div class="xcxset">

                            <ul>
                                <li>
                                    <div class="form-group">

                                        @Html.LabelFor(model => model.PsyUserEmail, new { @class = "col-sm-2 Settinglable  no-margin" })

                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(model => model.PsyUserEmail, new { @class = "SettingInput col-sm-10", @readOnly = "true" })
                                        </div>

                                    </div>
                                </li>

                                <li>
                                    <div class="form-group">

                                        @Html.LabelFor(model => model.PsyTitle, new { @class = "col-sm-2 Settinglable  no-margin" })

                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(model => model.PsyTitle, new { @class = "SettingInput col-sm-10 ", @readOnly = "true" })

                                        </div>
                                        <div class="col-sm-1 editBtn" data-z="">修改</div>
                                    </div>
                                </li>

                                <li>
                                    <div class="form-group">

                                        @Html.LabelFor(model => model.PsyInfo, new { @class = "col-sm-2 Settinglable  no-margin" })

                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(model => model.PsyInfo, new { @class = "SettingInput col-sm-10 ", @readOnly = "true" })

                                        </div>
                                        <div class="col-sm-1 editBtn" data-z="">修改</div>
                                    </div>
                                </li>


                                <li>
                                    <div class="form-group">

                                        @Html.LabelFor(model => model.PsyContent, new { @class = "col-sm-2 Settinglable  no-margin" })

                                        <div class="col-sm-9">
                                          
                                            <textarea name="PsyContent" id="PsyContent" class="form-control textareacontent" readonly="readonly">@Model.PsyContent</textarea>
                                        </div>
                                            <div class="col-sm-1 editBtn"  data-z="">修改</div>                                                                       
                                    </div>
                                </li>


                                <li>
                                    <div class="form-group">

                                        @Html.LabelFor(model => model.PsyShanchang, new { @class = "col-sm-2 Settinglable  no-margin" })

                                        <div class="col-sm-9">
                                            <textarea name="PsyShanchang" id="PsyShanchang" class="form-control textareacontent" readonly="readonly">@Model.PsyShanchang</textarea>
                                        </div>
                                        <div class="col-sm-1 editBtn" data-z="">修改</div>
                                    </div>
                                </li>
                            </ul>


                        </div>

                    </form>
                </div>
                <!-- /.col -->
            </div>
        </div>
    </div>
    
</div>

@section BottomScripts {
<script type="text/javascript" src="~/plugins/bootstrap-validator/js/bootstrapValidator.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {


            $('#xcxsetting').bootstrapValidator({
                live: 'enabled',
                //  submitButtons: '#btn-test',
                message: 'This value is not valid',
                //feedbackIcons: {
                //    valid: 'glyphicon glyphicon-ok',
                //    invalid: 'glyphicon glyphicon-remove',
                //    validating: 'glyphicon glyphicon-refresh'
                //},
                fields: {
                    PsyShanchang: {
                        validators: {
                            notEmpty: {
                                message: '擅长领域不能为空'
                            },
                        }
                    },
                    PsyContent: {
                        validators: {
                            notEmpty: {
                                message: '自我介绍不能为空'
                            },
                        }
                    },
                    PsyInfo: {
                        validators: {
                            notEmpty: {
                                message: '一句话介绍不能为空'
                            }
                        }
                    },
                    PsyTitle: {
                        validators: {
                            notEmpty: {
                                message: '小程序不能为空'
                            },
                        }
                    },

                }
            });
           


        });

        $(".editBtn").on("click", function () {

            var optinput = $(this).parent().parent().find("input");
            if (optinput.attr("name") == undefined)
            {
                optinput = $(this).parent().parent().find("textarea");
            }
            optinput.addClass("bg-setcolor").removeAttr("readOnly").focus();
            var optval = optinput.val();
            optinput.val("");
            optinput.val(optval);
            var x = optinput.attr("name");
            $(this).html("<button class='btn btn-sm btn-info' onclick='editOk(this)' data-z='" + x + "'>确认修改</button>");
        });



        function editOk(opt) {
            $("#xcxsetting").bootstrapValidator('validate');//提交验证  
            if ($("#xcxsetting").data('bootstrapValidator').isValid()) {

               // alert("验证成功");
                var psyId = $("[name='Id']").val();
                var opt_name = $(opt).attr("data-z");


                var opt_val = $("[name=" + opt_name + "]").val();

                var token = $('[name=__RequestVerificationToken]').val();
                $.ajax({
                    type: 'POST',
                    url: "/PsyUserSetting/UpdateOpt",
                    data: {
                        Id: psyId,
                        optName: opt_name,
                        optVal: opt_val,
                        __RequestVerificationToken: token,
                    },
                    dataType: "json",
                    success: function (data) {
                        if (data.MessageStatus) {
                            //  alert(data.MessageInfo);
                            // location.reload();
                           // alert("更新成功！");
                         location.reload();
                        }
                        else { alert("更新失败！"); }

                    },
                    error: function () {
                        alert("shibai");
                    }
                });
            }
            else {
                alert("验证失败");
            }

           
        }
    </script>

}